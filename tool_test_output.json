{"version": "0.1", "tests": [{"id": "functional.test_toolbox.TestForTool_pangolin.test_tool_000000", "has_data": true, "data": {"tool_id": "pangolin", "tool_version": "2", "test_index": 0, "time_seconds": 39.275978803634644, "inputs": {"query": {"src": "hda", "id": "2891970512fa2d5a"}}, "job": {"command_line": "pangolin /tmp/tmpx3_lpz0h/files/a/8/b/dataset_a8be3cc4-0543-449a-be7d-6228c1d4dec3.dat --min-length 10000 --max-ambig 0.5 --threads 1 --alignment", "command_version": "pangolin 2.3.8\n", "create_time": "2021-04-10T07:31:01.056992", "exit_code": 0, "external_id": "30549", "galaxy_version": "21.01", "history_id": "2891970512fa2d5a", "id": "5729865256bc2525", "inputs": {"query": {"id": "2891970512fa2d5a", "src": "hda", "uuid": "a8be3cc4-0543-449a-be7d-6228c1d4dec3"}}, "job_messages": [], "job_metrics": [], "job_stderr": "", "job_stdout": "", "model_class": "Job", "outputs": {"alignment": {"id": "54f2a3a23292eb07", "src": "hda", "uuid": "9af10d42-28c7-4fbe-bb13-09f934163c69"}, "lineage": {"id": "5729865256bc2525", "src": "hda", "uuid": "2acd3f47-5a84-4dd7-8b9b-9db6601dcdc0"}}, "params": {"__input_ext": "\"fasta\"", "chromInfo": "\"/tmp/tmpx3_lpz0h/galaxy-dev/tool-data/shared/ucsc/chrom/?.len\"", "dbkey": "\"?\"", "maxambig": "\"0.5\"", "minlength": "\"10000\"", "threads": "\"1\""}, "state": "ok", "stderr": "Job counts:\n\tcount\tjobs\n\t1\tadd_failed_seqs\n\t1\talign_to_reference\n\t1\tall\n\t1\tminimap2_check_distance\n\t1\toverwrite\n\t1\tpangolearn\n\t1\tparse_paf\n\t1\ttype_variants_b117\n\t1\ttype_variants_b1351\n\t1\ttype_variants_p1\n\t1\ttype_variants_p2\n\t1\ttype_variants_p3\n\t12\n\u001b[33mJob counts:\n\tcount\tjobs\n\t1\tparse_paf\n\t1\u001b[0m\n[M::mm_idx_gen::0.003*0.00] collected minimizers\n[M::mm_idx_gen::0.004*1.03] sorted minimizers\n[M::main::0.004*1.02] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*0.97] mid_occ = 100\n[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*0.93] distinct minimizers: 2952 (100.00% are singletons); average occurrences: 1.000; average spacing: 10.130; total length: 29903\nwarning: using --pad without --trim has no effect\n[M::worker_pipeline::0.019*0.84] mapped 1 sequences\n[M::main] Version: 2.18-r1015\n[M::main] CMD: minimap2 -a -x asm5 -t 1 /home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangolin/data/reference.fasta /tmp/tmpnb3o0no3/mappable.fasta\n[M::main] Real time: 0.020 sec; CPU: 0.016 sec; Peak RSS: 0.004 GB\n\u001b[33mJob counts:\n\tcount\tjobs\n\t1\tadd_failed_seqs\n\t1\u001b[0m\n\u001b[33mJob counts:\n\tcount\tjobs\n\t1\toverwrite\n\t1\u001b[0m\n", "stdout": "Do things with sam files\n\nUsage:\n  gofasta sam [flags]\n  gofasta sam [command]\n\nAvailable Commands:\n  indels       Parse a SAM file for raw indel information\n  toMultiAlign Convert a SAM file to a multiple alignment in fasta format\n  toPairAlign  convert a SAM file to pairwise alignments in fasta format\n  variants     Call variants between ref and query from a SAM file\n\nFlags:\n  -h, --help               help for sam\n  -r, --reference string   Reference fasta file used to generate the sam file\n  -s, --samfile string     samfile to read. If none is specified, will read from stdin\n  -t, --threads int        Number of threads to use (default 1)\n\nUse \"gofasta sam [command] --help\" for more information about a command.\n2.18-r1015\n6.1.1\nloading model 04/10/2021, 09:31:16\nprocessing block of 1 sequences 04/10/2021, 09:31:19\ncomplete 04/10/2021, 09:31:20\n\u001b[32mOutput file written to: \u001b[0m/tmp/tmpx3_lpz0h/job_working_directory/000/2/working/lineage_report.csv\n\u001b[32mOutput alignment written to: \u001b[0m/tmp/tmpx3_lpz0h/job_working_directory/000/2/working/sequences.aln.fasta\n\u001b[32mFound the snakefile\u001b[0m\n\u001b[32mThe query file is:\u001b[0m/tmp/tmpx3_lpz0h/files/a/8/b/dataset_a8be3cc4-0543-449a-be7d-6228c1d4dec3.dat\n\u001b[36m\n--threads flag used, but threading not currently supported. Continuing with one thread.\u001b[0m\nLooking in /home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data for data files...\n\u001b[32m\nData files found\u001b[0m\nTrained model:\t/home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data/decisionTree_v1.joblib\nHeader file:\t/home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data/decisionTreeHeaders_v1.joblib\nLineages csv:\t/home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data/lineages.metadata.csv\n", "tool_id": "pangolin", "tool_stderr": "Job counts:\n\tcount\tjobs\n\t1\tadd_failed_seqs\n\t1\talign_to_reference\n\t1\tall\n\t1\tminimap2_check_distance\n\t1\toverwrite\n\t1\tpangolearn\n\t1\tparse_paf\n\t1\ttype_variants_b117\n\t1\ttype_variants_b1351\n\t1\ttype_variants_p1\n\t1\ttype_variants_p2\n\t1\ttype_variants_p3\n\t12\n\u001b[33mJob counts:\n\tcount\tjobs\n\t1\tparse_paf\n\t1\u001b[0m\n[M::mm_idx_gen::0.003*0.00] collected minimizers\n[M::mm_idx_gen::0.004*1.03] sorted minimizers\n[M::main::0.004*1.02] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*0.97] mid_occ = 100\n[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*0.93] distinct minimizers: 2952 (100.00% are singletons); average occurrences: 1.000; average spacing: 10.130; total length: 29903\nwarning: using --pad without --trim has no effect\n[M::worker_pipeline::0.019*0.84] mapped 1 sequences\n[M::main] Version: 2.18-r1015\n[M::main] CMD: minimap2 -a -x asm5 -t 1 /home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangolin/data/reference.fasta /tmp/tmpnb3o0no3/mappable.fasta\n[M::main] Real time: 0.020 sec; CPU: 0.016 sec; Peak RSS: 0.004 GB\n\u001b[33mJob counts:\n\tcount\tjobs\n\t1\tadd_failed_seqs\n\t1\u001b[0m\n\u001b[33mJob counts:\n\tcount\tjobs\n\t1\toverwrite\n\t1\u001b[0m\n", "tool_stdout": "Do things with sam files\n\nUsage:\n  gofasta sam [flags]\n  gofasta sam [command]\n\nAvailable Commands:\n  indels       Parse a SAM file for raw indel information\n  toMultiAlign Convert a SAM file to a multiple alignment in fasta format\n  toPairAlign  convert a SAM file to pairwise alignments in fasta format\n  variants     Call variants between ref and query from a SAM file\n\nFlags:\n  -h, --help               help for sam\n  -r, --reference string   Reference fasta file used to generate the sam file\n  -s, --samfile string     samfile to read. If none is specified, will read from stdin\n  -t, --threads int        Number of threads to use (default 1)\n\nUse \"gofasta sam [command] --help\" for more information about a command.\n2.18-r1015\n6.1.1\nloading model 04/10/2021, 09:31:16\nprocessing block of 1 sequences 04/10/2021, 09:31:19\ncomplete 04/10/2021, 09:31:20\n\u001b[32mOutput file written to: \u001b[0m/tmp/tmpx3_lpz0h/job_working_directory/000/2/working/lineage_report.csv\n\u001b[32mOutput alignment written to: \u001b[0m/tmp/tmpx3_lpz0h/job_working_directory/000/2/working/sequences.aln.fasta\n\u001b[32mFound the snakefile\u001b[0m\n\u001b[32mThe query file is:\u001b[0m/tmp/tmpx3_lpz0h/files/a/8/b/dataset_a8be3cc4-0543-449a-be7d-6228c1d4dec3.dat\n\u001b[36m\n--threads flag used, but threading not currently supported. Continuing with one thread.\u001b[0m\nLooking in /home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data for data files...\n\u001b[32m\nData files found\u001b[0m\nTrained model:\t/home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data/decisionTree_v1.joblib\nHeader file:\t/home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data/decisionTreeHeaders_v1.joblib\nLineages csv:\t/home/biolinu/miniconda3/envs/__pangolin@2/lib/python3.8/site-packages/pangoLEARN/data/lineages.metadata.csv\n", "update_time": "2021-04-10T07:31:29.639213", "user_email": "test@bx.psu.edu"}, "status": "success"}}], "summary": {"num_tests": 1, "num_failures": 0, "num_errors": 0, "num_skips": 0}, "exit_code": 0}